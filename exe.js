// Generated by CoffeeScript 1.9.1
var _, builtin, builtinsources, exe, fn, i, len, name, opssource, optype;

builtinsources = [require('./ops/boolean'), require('./ops/conditional'), require('./ops/maths'), require('./ops/transform')];

builtin = {};

for (i = 0, len = builtinsources.length; i < len; i++) {
  opssource = builtinsources[i];
  for (_ in opssource) {
    optype = opssource[_];
    for (name in optype) {
      fn = optype[name];
      builtin[name] = fn;
    }
  }
}

exe = function(def) {
  var providers, res;
  providers = {};
  providers.literal = function(exe, value) {
    return function(cb) {
      return cb(null, value);
    };
  };
  for (name in builtin) {
    fn = builtin[name];
    providers[name] = fn;
  }
  if (def != null) {
    for (name in def) {
      fn = def[name];
      providers[name] = fn;
    }
  }
  res = {
    providers: providers,
    isquery: function(q) {
      if (typeof q !== 'object') {
        return false;
      }
      return q.__query != null;
    },
    build: function(q) {
      if (!res.isquery(q)) {
        return res.providers.literal(res, q);
      }
      if (res.providers[q.__query] == null) {
        throw new Error(q.__query + " not found");
      }
      return res.providers[q.__query](res, q);
    }
  };
  return res;
};

exe.use = exe;

module.exports = exe;
