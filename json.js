// Generated by CoffeeScript 1.8.0
var executequery, fillgraph, fillprop, jsonfilter;

jsonfilter = require('./json-filter');

fillprop = function(data, graph, subqueries) {
  var def;
  if (graph instanceof Array) {
    if (!(data instanceof Array)) {
      throw new Error('Expecting an array', {
        data: data
      });
    }
    if (graph[0].__odoql != null) {
      def = graph[0].__odoql;
      return subqueries[def.name](data, graph, subqueries);
    } else {
      return data.map(function(t) {
        return fillgraph(t, graph[0], subqueries);
      });
    }
  } else if (graph.__odoql != null) {
    def = graph.__odoql;
    return subqueries[def.name](graph, data, subqueries);
  } else {
    return fillgraph(data, graph, subqueries);
  }
};

fillgraph = function(data, graph, subqueries) {
  var key, result, shape;
  if ((data == null) || data === null) {
    return null;
  }
  if (typeof graph !== 'object') {
    return data;
  }
  result = {};
  for (key in graph) {
    shape = graph[key];
    if (data[key] == null) {
      continue;
    }
    result[key] = fillprop(data[key], shape, subqueries);
  }
  return result;
};

executequery = function(data, graph, subqueries) {
  var results;
  if (graph instanceof Array) {
    graph = graph[0];
    results = jsonfilter(data, graph.__odoql.filter);
    results = results.map(function(result) {
      return fillgraph(result, graph, subqueries);
    });
    return results;
  }
  results = jsonfilter(data, graph.__odoql.filter);
  results = results.map(function(result) {
    return fillgraph(result, graph, subqueries);
  });
  if (results.length === 0) {
    return null;
  }
  if (results.length !== 1) {
    throw new Error('One needed, many found');
  }
  return results[0];
};

module.exports = executequery;
