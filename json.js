// Generated by CoffeeScript 1.8.0
var fillgraph, filltarget, filterstore, jsonfilter, subqueries;

jsonfilter = require('./json-filter');

subqueries = {};

filltarget = function(graph, item) {
  if (typeof graph !== 'object') {
    return item;
  }
  return fillgraph(graph, item);
};

fillgraph = function(graph, item) {
  var key, result, shape, target;
  if ((item == null) || item === null) {
    return null;
  }
  result = {};
  for (key in graph) {
    shape = graph[key];
    if (item[key] == null) {
      continue;
    }
    target = item[key];
    if (shape.__odoql != null) {
      result[key] = subqueries[shape.__odoql.query](shape.__odoql, shape, target);
      continue;
    }
    if (target instanceof Array) {
      result[key] = target.map(function(t) {
        return filltarget(shape, t);
      });
    } else {
      result[key] = filltarget(shape, target);
    }
  }
  return result;
};

filterstore = function(query, graph, data) {
  var results;
  results = jsonfilter(data, query.params.filter);
  results = results.map(function(result) {
    return fillgraph(graph, result);
  });
  if (query.type === 'array') {
    return results;
  }
  if (results.length === 0) {
    return null;
  }
  if (results.length !== 1) {
    throw new Error('One needed, many found');
  }
  return results[0];
};

subqueries['json-filter'] = filterstore;

module.exports = {
  subqueries: subqueries,
  query: filterstore,
  filter: jsonfilter
};
