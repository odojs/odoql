// Generated by CoffeeScript 1.8.0
var executequery, executesinglequery, fillproperties, fillproperty, jsonfilter;

jsonfilter = require('./filter');

fillproperty = function(data, shape, subqueries) {
  if (shape.__query != null) {
    return subqueries[shape.__query](data, shape, subqueries);
  }
  return fillproperties(data, shape, subqueries);
};

fillproperties = function(data, shape, subqueries) {
  var key, result, subshape;
  if ((data == null) || data === null) {
    return null;
  }
  if (typeof shape !== 'object') {
    return data;
  }
  result = {};
  for (key in shape) {
    subshape = shape[key];
    if (data[key] == null) {
      continue;
    }
    if (!(subshape instanceof Array)) {
      result[key] = fillproperty(data[key], subshape, subqueries);
      continue;
    }
    if (!(data[key] instanceof Array)) {
      throw Error('Expecting array found ' + typeof data);
    }
    subshape = subshape[0];
    result[key] = data[key].map(function(d) {
      return fillproperty(d, subshape, subqueries);
    });
  }
  return result;
};

executesinglequery = function(data, query, subqueries) {
  var results;
  results = jsonfilter(data, query.__params.filter);
  results = results.map(function(result) {
    return fillproperties(result, query.__shape, subqueries);
  });
  if (results.length === 0) {
    return null;
  }
  if (results.length !== 1) {
    throw new Error('One needed, many found');
  }
  return results[0];
};

executequery = function(data, query, subqueries) {
  var results;
  if (!(query.__shape instanceof Array)) {
    return executesinglequery(data, query, subqueries);
  }
  results = jsonfilter(data, query.__params.filter);
  results = results.map(function(result) {
    return fillproperties(result, query.__shape[0], subqueries);
  });
  return results;
};

module.exports = executequery;
