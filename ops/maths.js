// Generated by CoffeeScript 1.9.1
var binarymath, fn, fn1, helpers, i, j, len, len1, op, res, uniarymath;

helpers = require('odoql-utils/helpers');

res = {
  binary: {
    add: function(exe, params) {
      return helpers.binary(exe, params, function(left, right) {
        return left + right;
      });
    },
    sub: function(exe, params) {
      return helpers.binary(exe, params, function(left, right) {
        return left - right;
      });
    },
    div: function(exe, params) {
      return helpers.binary(exe, params, function(left, right) {
        return left / right;
      });
    },
    mult: function(exe, params) {
      return helpers.binary(exe, params, function(left, right) {
        return left * right;
      });
    },
    mod: function(exe, params) {
      return helpers.binary(exe, params, function(left, right) {
        return left % right;
      });
    }
  },
  unary: {}
};

binarymath = ['pow', 'atan2'];

fn = function(op) {
  var operation;
  operation = Math[op];
  return res.binary[op] = function(exe, params) {
    return helpers.binary(exe, params, function(left, right) {
      return operation(left, right);
    });
  };
};
for (i = 0, len = binarymath.length; i < len; i++) {
  op = binarymath[i];
  fn(op);
}

uniarymath = ['abs', 'acos', 'asin', 'atan', 'ceil', 'cos', 'exp', 'floor', 'log', 'round', 'sin', 'sqrt', 'tan'];

fn1 = function(op) {
  var operation;
  operation = Math[op];
  return res.unary[op] = function(exe, params) {
    return helpers.unary(exe, params, function(source) {
      return operation(source);
    });
  };
};
for (j = 0, len1 = uniarymath.length; j < len1; j++) {
  op = uniarymath[j];
  fn1(op);
}

module.exports = res;
