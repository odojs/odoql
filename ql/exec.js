// Generated by CoffeeScript 1.9.1
var async, build, extend;

extend = require('extend');

build = require('./build');

async = require('odoql-utils/async');

module.exports = function(query, stores, callback) {
  var errors, fn, i, len, q, state, tasks;
  query = build(query, stores);
  errors = [];
  tasks = [];
  state = {};
  fn = function(q) {
    return tasks.push(function(cb) {
      return q.query(function(err, results) {
        if (err != null) {
          errors.push(err);
        } else {
          extend(state, results);
        }
        return cb();
      });
    });
  };
  for (i = 0, len = query.length; i < len; i++) {
    q = query[i];
    fn(q);
  }
  return async.parallel(tasks, function() {
    if (errors.length !== 0) {
      return callback(errors, state);
    }
    return callback(null, state);
  });
};
