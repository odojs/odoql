// Generated by CoffeeScript 1.9.1
var isquery, stringify;

isquery = require('./isquery');

stringify = function(indent, query) {
  var key, newindent, res, value;
  if (query instanceof Array || typeof query !== 'object') {
    return JSON.stringify(query, null, 2).split('\n').map(function(i) {
      return "" + indent + i;
    }).join('\n');
  }
  newindent = indent + "  ";
  res = [];
  if (!isquery(query)) {
    for (key in query) {
      value = query[key];
      res.push("" + indent + key + ":");
      res.push(stringify(newindent, value));
    }
  } else {
    res.push("" + indent + query.__q);
    if ((query.__s != null) && !((query.__p != null) || (query.__l != null) || (query.__r != null))) {
      res.push(stringify(indent, query.__s));
    } else if ((query.__p != null) && (query.__s != null) && !((query.__l != null) || (query.__r != null))) {
      res.push(stringify(newindent, query.__p));
      res.push(stringify(indent, query.__s));
    } else {
      if (query.__p != null) {
        res.push(indent + "p:");
        res.push(stringify(newindent, query.__p));
      }
      if (query.__s != null) {
        res.push(indent + "s:");
        res.push(stringify(newindent, query.__s));
      }
      if (query.__l != null) {
        res.push(indent + "l:");
        res.push(stringify(newindent, query.__l));
      }
      if (query.__r != null) {
        res.push(indent + "r:");
        res.push(stringify(newindent, query.__r));
      }
    }
  }
  return res.join('\n');
};

module.exports = function(query) {
  return stringify('', query);
};
